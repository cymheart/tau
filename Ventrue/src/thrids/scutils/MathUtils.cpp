
#include"MathUtils.h"

namespace scutils
{

    double sine_table[SINE_TABLE_SIZE] =
    {
        0.0,                  0.024541228522912288, 0.049067674327418015,
        0.073564563599667426, 0.098017140329560604, 0.1224106751992162,
        0.14673047445536175,  0.17096188876030122,  0.19509032201612825,
        0.2191012401568698,   0.24298017990326387,  0.26671275747489837,
        0.29028467725446233,  0.31368174039889152,  0.33688985339222005,
        0.35989503653498811,  0.38268343236508978,  0.40524131400498986,
        0.42755509343028208,  0.44961132965460654,  0.47139673682599764,
        0.49289819222978404,  0.51410274419322166,  0.53499761988709715,
        0.55557023301960218,  0.57580819141784534,  0.59569930449243336,
        0.61523159058062682,  0.63439328416364549,  0.65317284295377676,
        0.67155895484701833,  0.68954054473706683,  0.70710678118654746,
        0.72424708295146689,  0.74095112535495911,  0.75720884650648446,
        0.77301045336273699,  0.78834642762660623,  0.80320753148064483,
        0.81758481315158371,  0.83146961230254524,  0.84485356524970701,
        0.85772861000027212,  0.87008699110871135,  0.88192126434835494,
        0.89322430119551532,  0.90398929312344334,  0.91420975570353069,
        0.92387953251128674,  0.93299279883473885,  0.94154406518302081,
        0.94952818059303667,  0.95694033573220894,  0.96377606579543984,
        0.97003125319454397,  0.97570213003852857,  0.98078528040323043,
        0.98527764238894122,  0.98917650996478101,  0.99247953459870997,
        0.99518472667219682,  0.99729045667869021,  0.99879545620517241,
        0.99969881869620425,  1.0,                  0.99969881869620425,
        0.99879545620517241,  0.99729045667869021,  0.99518472667219693,
        0.99247953459870997,  0.98917650996478101,  0.98527764238894122,
        0.98078528040323043,  0.97570213003852857,  0.97003125319454397,
        0.96377606579543984,  0.95694033573220894,  0.94952818059303667,
        0.94154406518302081,  0.93299279883473885,  0.92387953251128674,
        0.91420975570353069,  0.90398929312344345,  0.89322430119551521,
        0.88192126434835505,  0.87008699110871146,  0.85772861000027212,
        0.84485356524970723,  0.83146961230254546,  0.81758481315158371,
        0.80320753148064494,  0.78834642762660634,  0.7730104533627371,
        0.75720884650648468,  0.74095112535495899,  0.72424708295146689,
        0.70710678118654757,  0.68954054473706705,  0.67155895484701855,
        0.65317284295377664,  0.63439328416364549,  0.61523159058062693,
        0.59569930449243347,  0.57580819141784545,  0.55557023301960218,
        0.53499761988709715,  0.51410274419322177,  0.49289819222978415,
        0.47139673682599786,  0.44961132965460687,  0.42755509343028203,
        0.40524131400498992,  0.38268343236508989,  0.35989503653498833,
        0.33688985339222033,  0.31368174039889141,  0.29028467725446239,
        0.26671275747489848,  0.24298017990326407,  0.21910124015687005,
        0.19509032201612861,  0.17096188876030122,  0.1467304744553618,
        0.12241067519921635,  0.098017140329560826, 0.073564563599667732,
        0.049067674327417966, 0.024541228522912326, 0.0,
        -0.02454122852291208,  -0.049067674327417724,  -0.073564563599667496,
        -0.09801714032956059,  -0.1224106751992161,    -0.14673047445536158,
        -0.17096188876030097,  -0.19509032201612836,   -0.2191012401568698,
        -0.24298017990326382,  -0.26671275747489825,   -0.29028467725446211,
        -0.31368174039889118,  -0.33688985339222011,   -0.35989503653498811,
        -0.38268343236508967,  -0.40524131400498969,   -0.42755509343028181,
        -0.44961132965460665,  -0.47139673682599764,   -0.49289819222978393,
        -0.51410274419322155,  -0.53499761988709693,   -0.55557023301960196,
        -0.57580819141784534,  -0.59569930449243325,   -0.61523159058062671,
        -0.63439328416364527,  -0.65317284295377653,   -0.67155895484701844,
        -0.68954054473706683,  -0.70710678118654746,   -0.72424708295146678,
        -0.74095112535495888,  -0.75720884650648423,   -0.77301045336273666,
        -0.78834642762660589,  -0.80320753148064505,   -0.81758481315158382,
        -0.83146961230254524,  -0.84485356524970701,   -0.85772861000027201,
        -0.87008699110871135,  -0.88192126434835494,   -0.89322430119551521,
        -0.90398929312344312,  -0.91420975570353047,   -0.92387953251128652,
        -0.93299279883473896,  -0.94154406518302081,   -0.94952818059303667,
        -0.95694033573220882,  -0.96377606579543984,   -0.97003125319454397,
        -0.97570213003852846,  -0.98078528040323032,   -0.98527764238894111,
        -0.9891765099647809,   -0.99247953459871008,   -0.99518472667219693,
        -0.99729045667869021,  -0.99879545620517241,   -0.99969881869620425,
        -1.0,                  -0.99969881869620425,   -0.99879545620517241,
        -0.99729045667869021,  -0.99518472667219693,   -0.99247953459871008,
        -0.9891765099647809,   -0.98527764238894122,   -0.98078528040323043,
        -0.97570213003852857,  -0.97003125319454397,   -0.96377606579543995,
        -0.95694033573220894,  -0.94952818059303679,   -0.94154406518302092,
        -0.93299279883473907,  -0.92387953251128663,   -0.91420975570353058,
        -0.90398929312344334,  -0.89322430119551532,   -0.88192126434835505,
        -0.87008699110871146,  -0.85772861000027223,   -0.84485356524970723,
        -0.83146961230254546,  -0.81758481315158404,   -0.80320753148064528,
        -0.78834642762660612,  -0.77301045336273688,   -0.75720884650648457,
        -0.74095112535495911,  -0.724247082951467,     -0.70710678118654768,
        -0.68954054473706716,  -0.67155895484701866,   -0.65317284295377709,
        -0.63439328416364593,  -0.61523159058062737,   -0.59569930449243325,
        -0.57580819141784523,  -0.55557023301960218,   -0.53499761988709726,
        -0.51410274419322188,  -0.49289819222978426,   -0.47139673682599792,
        -0.44961132965460698,  -0.42755509343028253,   -0.40524131400499042,
        -0.38268343236509039,  -0.359895036534988,     -0.33688985339222,
        -0.31368174039889152,  -0.2902846772544625,    -0.26671275747489859,
        -0.24298017990326418,  -0.21910124015687016,   -0.19509032201612872,
        -0.17096188876030177,  -0.14673047445536239,   -0.12241067519921603,
        -0.098017140329560506, -0.073564563599667412,  -0.049067674327418091,
        -0.024541228522912448
    };

    DLL_FUNC double FastSin(double x)
    {
        int si = (int)(x * (0.5 * SINE_TABLE_SIZE / M_PI));    //按比例获取表最接近x的整数idx
        double d = x - si * (2.0 * M_PI / SINE_TABLE_SIZE);  //获取实际值和最近idx的距离
        int ci = si + SINE_TABLE_SIZE / 4;//sin[si]求导为cos[si],即为sin[si + Pi/2]处的值(cos,sin之间差Pi/2个相位)
        si &= SINE_TABLE_SIZE - 1;  //求余操作，限制si,ci到255内， 总数为255的求余可以利用&进行
        ci &= SINE_TABLE_SIZE - 1;

        //泰勒展开逼近原始sin曲线（2阶）,在x = si处展开
        //sine_table[si] + sine_table[ci] * (x - si) - 0.5 * sine_table[si] * (x - si)^2
        //其中d = x - si;
        //sine_table[ci] 为 sine_table[si]的导数
        //一阶展开逼近原始sin曲线为 sine_table[si] + sine_table[ci]*(x - si);
        return sine_table[si] + (sine_table[ci] - 0.5 * sine_table[si] * d) * d;
    }

    DLL_FUNC double FastCos(double x)
    {
        return FastSin(x + M_PI * 0.5);
    }

    DLL_FUNC float FastPow2(float p)
    {
        float offset = (p < 0) ? 1.0f : 0.0f;
        float clipp = (p < -126) ? -126.0f : p;
        int w = (int)clipp;

        float z = clipp - w + offset;
        union V { uint32_t i; float f; }v;
        v.i = (int)((1 << 23) * (clipp + 121.2740575f
            + 27.7280233f / (4.84252568f - z)
            - 1.49012907f * z));
        return v.f;
    }


    /// <summary>
    /// N = 3: P = (1-t)^2*P0 + 2*t*(1-t)*P1 + t^2*P2
    /// </summary>
    DLL_FUNC Vec2 SquareBezier(double t, Vec2 p0, Vec2 p1, Vec2 p2)
    {
        Vec2 v0 = p0 * pow(1 - t, 2);
        Vec2 v1 = p1 * (2 * t * (1 - t));
        Vec2 v2 = p2 * (t * t);
        Vec2 v = v0 + v1 + v2;
        return v;
    }
}

